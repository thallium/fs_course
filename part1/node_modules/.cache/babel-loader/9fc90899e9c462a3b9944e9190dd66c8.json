{"ast":null,"code":"var _jsxFileName = \"/home/thallium/Projects/React/part1/src/App.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = props => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: props.handleClick,\n    children: props.text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Button;\n\nconst Title = ({\n  content\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = Title;\n\nconst Statistic = ({\n  text,\n  value\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = Statistic;\n\nconst Statistics = ({\n  good,\n  neutral,\n  bad\n}) => {\n  if (good + neutral + bad === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        content: \"statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), \"No feedback given\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      content: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n      text: \"good\",\n      value: good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n      text: \"neutral\",\n      value: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n      text: \"bad\",\n      value: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n      text: \"average\",\n      value: (good - bad) / (good + bad + neutral)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n      text: \"Positive\",\n      value: good * 100 / (good + bad + neutral) + \"%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_c4 = Statistics;\n\nconst App = () => {\n  _s();\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      content: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setGood(good + 1),\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setNeutral(neutral + 1),\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setBad(bad + 1),\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c5 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"Statistic\");\n$RefreshReg$(_c4, \"Statistics\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"sources":["/home/thallium/Projects/React/part1/src/App.js"],"names":["React","useState","Button","props","handleClick","text","Title","content","Statistic","value","Statistics","good","neutral","bad","App","setGood","setNeutral","setBad"],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport './App.css';\n\nconst Button = (props) => {\n    return (\n        <button onClick={props.handleClick}>\n            {props.text}\n        </button>\n    )\n}\n\nconst Title = ({ content }) => {\n    return (\n        <h2>{content}</h2>\n    )\n}\n\nconst Statistic = ({text, value}) => {\n    return(\n        <tr>\n            <td>{text}</td>\n            <td>{value}</td>\n        </tr>\n    )\n}\n\nconst Statistics = ({good, neutral, bad}) => {\n    if (good+neutral+bad===0) {\n        return(\n            <div>\n                <Title content='statistics' />\n                No feedback given\n            </div>\n        )\n    }\n    return(\n        <table>\n            <Title content='statistics' />\n            <Statistic text=\"good\" value={good}/>\n            <Statistic text=\"neutral\" value={neutral}/>\n            <Statistic text=\"bad\" value={bad}/>\n            <Statistic text=\"average\" value={(good-bad)/(good+bad+neutral)}/>\n            <Statistic text=\"Positive\" value={ good * 100 / (good + bad + neutral) + \"%\"}/>\n        </table>\n    )\n}\n\nconst App = () => {\n    const [good, setGood] = useState(0)\n    const [neutral, setNeutral] = useState(0)\n    const [bad, setBad] = useState(0)\n    return (\n        <div>\n            <Title content=\"give feedback\" />\n            <Button handleClick={() => setGood(good + 1)} text='good' />\n            <Button handleClick={() => setNeutral(neutral + 1)} text='neutral' />\n            <Button handleClick={() => setBad(bad + 1)} text='bad' />\n            <Statistics good={good} neutral={neutral} bad={bad}/>\n        </div>\n    )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}