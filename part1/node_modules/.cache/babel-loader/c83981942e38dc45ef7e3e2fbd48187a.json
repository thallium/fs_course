{"ast":null,"code":"var _jsxFileName = \"/home/thallium/Projects/React/part1/src/App.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Display = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.counter\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Display;\n\nconst Button = props => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: props.handleClick,\n    children: props.text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = Button;\n\nconst Title = ({\n  content\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = Title;\n\nconst App = () => {\n  _s();\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      content: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setGood(good + 1),\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setNeutral(neutral + 1),\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setBad(bad + 1),\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Title, {\n      content: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"good \", good]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"neutral \", neutral]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"bad \", bad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"average \", (good - bad) / (good + bad + neutral)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), \"positive \", goo * 100 / (good + bad + neutral), \"%\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Display\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/home/thallium/Projects/React/part1/src/App.js"],"names":["React","useState","Display","props","counter","Button","handleClick","text","Title","content","App","good","setGood","neutral","setNeutral","bad","setBad","goo"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACvB,sBACI;AAAA,cAAMA,KAAK,CAACC;AAAZ;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAJD;;KAAMF,O;;AAKN,MAAMG,MAAM,GAAIF,KAAD,IAAW;AACtB,sBACI;AAAQ,IAAA,OAAO,EAAEA,KAAK,CAACG,WAAvB;AAAA,cACKH,KAAK,CAACI;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAND;;MAAMF,M;;AAQN,MAAMG,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAC3B,sBACI;AAAA,cAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAJD;;MAAMD,K;;AAMN,MAAME,GAAG,GAAG,MAAM;AAAA;;AACd,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACc,GAAD,EAAMC,MAAN,IAAgBf,QAAQ,CAAC,CAAD,CAA9B;AAGA,sBACI;AAAA,4BACI,QAAC,KAAD;AAAO,MAAA,OAAO,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,MAAMW,OAAO,CAACD,IAAI,GAAG,CAAR,CAAlC;AAA8C,MAAA,IAAI,EAAC;AAAnD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,MAAMG,UAAU,CAACD,OAAO,GAAG,CAAX,CAArC;AAAoD,MAAA,IAAI,EAAC;AAAzD;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,MAAMG,MAAM,CAACD,GAAG,GAAG,CAAP,CAAjC;AAA4C,MAAA,IAAI,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI,QAAC,KAAD;AAAO,MAAA,OAAO,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAA,0BAASJ,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAA,6BAAYE,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQI;AAAA,yBAAQE,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,eASI;AAAA,6BAAY,CAACJ,IAAI,GAACI,GAAN,KAAYJ,IAAI,GAACI,GAAL,GAASF,OAArB,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,eAUcI,GAAG,GAAC,GAAJ,IAASN,IAAI,GAACI,GAAL,GAASF,OAAlB,CAVd;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CApBD;;GAAMH,G;;MAAAA,G;AAsBN,eAAeA,GAAf","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport './App.css';\n\nconst Display = (props) => {\n    return (\n        <div>{props.counter}</div>\n    )\n}\nconst Button = (props) => {\n    return (\n        <button onClick={props.handleClick}>\n            {props.text}\n        </button>\n    )\n}\n\nconst Title = ({ content }) => {\n    return (\n        <h2>{content}</h2>\n    )\n}\n\nconst App = () => {\n    const [good, setGood] = useState(0)\n    const [neutral, setNeutral] = useState(0)\n    const [bad, setBad] = useState(0)\n\n\n    return (\n        <div>\n            <Title content=\"give feedback\" />\n            <Button handleClick={() => setGood(good + 1)} text='good' />\n            <Button handleClick={() => setNeutral(neutral + 1)} text='neutral' />\n            <Button handleClick={() => setBad(bad + 1)} text='bad' />\n            <Title content='statistics' />\n            <p>good {good}</p>\n            <p>neutral {neutral}</p>\n            <p>bad {bad}</p>\n            <p>average {(good-bad)/(good+bad+neutral)}</p>\n            positive {goo*100/(good+bad+neutral)}%\n        </div>\n    )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}